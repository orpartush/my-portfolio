{"remainingRequest":"C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Or Partush\\Desktop\\portfolio\\src\\cmps\\projects.vue?vue&type=template&id=7dd94b53&","dependencies":[{"path":"C:\\Users\\Or Partush\\Desktop\\portfolio\\src\\cmps\\projects.vue","mtime":1588673758000},{"path":"C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Or Partush\\Desktop\\portfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}